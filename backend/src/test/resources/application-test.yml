spring:
  application:
    name: calendar-aggregator-test
  security:
    enabled: true
  # OAuth2 Client Configuration for testing
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID:test-google-client-id}
            client-secret: ${GOOGLE_CLIENT_SECRET:test-google-client-secret}
            redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
            scope:
              - https://www.googleapis.com/auth/calendar
              - https://www.googleapis.com/auth/calendar.events
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
          outlook:
            client-id: ${OUTLOOK_CLIENT_ID:test-outlook-client-id}
            client-secret: ${OUTLOOK_CLIENT_SECRET:test-outlook-client-secret}
            redirect-uri: ${OUTLOOK_REDIRECT_URI:http://localhost:8080/auth/outlook/callback}
            scope:
              - Calendars.ReadWrite
              - offline_access
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          outlook:
            authorization-uri: https://login.microsoftonline.com/${OUTLOOK_TENANT_ID:test-tenant-id}/oauth2/v2.0/authorize
            token-uri: https://login.microsoftonline.com/${OUTLOOK_TENANT_ID:test-tenant-id}/oauth2/v2.0/token
            user-info-uri: https://graph.microsoft.com/v1.0/me
            user-name-attribute: id

server:
  port: 0  # Use random port for testing

google:
  calendar:
    application-name: ${GOOGLE_APPLICATION_NAME:Calendar Test}
    scopes:
      - https://www.googleapis.com/auth/calendar

outlook:
  client-id: ${OUTLOOK_CLIENT_ID:test-outlook-client-id}
  client-secret: ${OUTLOOK_CLIENT_SECRET:test-outlook-client-secret}
  tenant-id: ${OUTLOOK_TENANT_ID:test-tenant-id}
  scopes:
    - Calendars.ReadWrite
    - offline_access

logging:
  level:
    com.calendar: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n" 